From f7d82600ce74d3cbb2a1ceb907bc9245e60cf68d Mon Sep 17 00:00:00 2001
From: WingMan Kwok <w-kwok2@ti.com>
Date: Wed, 18 Apr 2018 17:38:32 -0400
Subject: [PATCH 212/223] net/packet: pass on redundant net info in
 packet_recvmsg

Redundant net information (HSR TAG or PRP RCT) saved in skb
shared info struct is passed to user space application through
control message area of the receive message struct.

Signed-off-by: WingMan Kwok <w-kwok2@ti.com>
---
 include/net/sock.h     | 10 ++++++++++
 net/packet/af_packet.c |  2 ++
 2 files changed, 12 insertions(+)

diff --git a/include/net/sock.h b/include/net/sock.h
index 92b2697..26beaad 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -2184,6 +2184,16 @@ static inline void sock_tx_timestamp(const struct sock *sk, __u16 tsflags,
 		*tx_flags |= SKBTX_WIFI_STATUS;
 }
 
+static inline void sock_recv_redundant_info(struct msghdr *msg, struct sock *sk,
+					    struct sk_buff *skb)
+{
+	struct skb_redundant_info *sred;
+
+	sred = skb_redinfo(skb);
+	if (sred->lsdu_size)
+		put_cmsg(msg, SOL_SOCKET, SCM_REDUNDANT, sizeof(*sred), sred);
+}
+
 /**
  * sk_eat_skb - Release a skb if it is no longer needed
  * @sk: socket to eat this skb from
diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index e7f6657..6d83f48 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -3363,6 +3363,8 @@ static int packet_recvmsg(struct socket *sock, struct msghdr *msg, size_t len,
 
 	sock_recv_ts_and_drops(msg, sk, skb);
 
+	sock_recv_redundant_info(msg, sk, skb);
+
 	if (msg->msg_name) {
 		/* If the address length field is there to be filled
 		 * in, we fill it in now.
-- 
1.9.1

