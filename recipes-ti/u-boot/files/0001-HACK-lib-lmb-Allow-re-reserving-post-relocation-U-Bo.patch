From 36ff220d1c907a9c6aa568521736e52803b85a5d Mon Sep 17 00:00:00 2001
From: paresh-ti <p-bhagat@ti.com>
Date: Fri, 21 Apr 2023 11:50:49 +0530
Subject: [PATCH] HACK: lib: lmb: Allow re-reserving post-relocation U-Boot
 memory

Doing this allows that memory to be reserved for example for later HLOS
use via DTS entry without conflicting with temporary U-Boot usage, which
would normally result in an error like "ERROR: reserving fdt memory region
failed" shown during Linux Kernel boot preparations.
WARNING: The user must ensure with their U-Boot usage and DTS setup to
not use the newly-extended reserved memory region during U-Boot runtime,
otherwise U-Boot corruption could occur. This includes but is not limited
to attempting to load binary files that would overlap U-Boot's after-
relocation's memory region, for which now no error would be shown.

Upstream-Status: Pending

Signed-off-by: Andreas Dannenberg dannenberg@ti.com
Signed-off-by: paresh-ti <p-bhagat@ti.com>
---
 lib/lmb.c | 54 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

diff --git a/lib/lmb.c b/lib/lmb.c
index 2444b2a621..106ca5e320 100644
--- a/lib/lmb.c
+++ b/lib/lmb.c
@@ -258,6 +258,60 @@ static long lmb_add_region_flags(struct lmb_region *rgn, phys_addr_t base,
 				return -1; /* regions with new flags */
 		}
 
+		/*
+		 * See if the memory region being checked against is U-Boot's
+		 * own after-relocation region. If it is and the newly added
+		 * region overlaps U-Boot's own region adjust it in size and/
+		 * or location to make it adjacent to U-Boot's own region,
+		 * essentially allowing for U-Boot's own region to be extended
+		 * in the next step to also cover the newly added region.
+		 *
+		 * Doing this allows that memory to be reserved for example for
+		 * later HLOS use via DTS entry without conflicting with
+		 * temporary U-Boot usage, which would normally result in an
+		 * error like "ERROR: reserving fdt memory region failed" shown
+		 * during Linux Kernel boot preparations.
+		 *
+		 * WARNING: The user must ensure with their U-Boot usage and
+		 * DTS setup to not use the newly-extended reserved memory
+		 * region during U-Boot runtime, otherwise U-Boot corruption
+		 * could occur. This includes but is not limited to attempting
+		 * to load binary files that would overlap U-Boot's after-
+		 * relocation's memory region, for which now no error would be
+		 * shown.
+		 */
+		if ((rgnbase <= gd->relocaddr) &&
+		    (gd->relocaddr < rgnbase + rgnsize)) {
+			if ((base > rgnbase) &&
+			    (base + size < rgnbase + rgnsize)) {
+				/*
+				 * New region is within U-Boot's region,
+				 * so we're done.
+				 */
+				return 0;
+			}
+			else if ((base < rgnbase) && (base + size > rgnbase) &&
+				 (base + size <= rgnbase + rgnsize)) {
+				/*
+				 * New region starts below U-Boot's region and
+				 * reaches into it. Shorten it to make it
+				 * adjacent.
+				 */
+				size -= base + size - rgnbase;
+			}
+			else if ((base >= rgnbase) && (base < rgnbase + rgnsize)) {
+				/*
+				 * New region starts within U-Boot's region and
+				 * reaches beyond it. Move its start address and
+				 * shorten it to make it adjacent.
+				 */
+				size -= rgnbase + rgnsize - base;
+				base = rgnbase + rgnsize;
+
+			}
+		}
+
+
 		adjacent = lmb_addrs_adjacent(base, size, rgnbase, rgnsize);
 		if (adjacent > 0) {
 			if (flags != rgnflags)
-- 
2.17.1

